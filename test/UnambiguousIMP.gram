<Program>       -> begin <Code> end
<Code>          -> eps
                -> <InstList>
<InstList>      -> <Instruction>
                -> <Instruction> ; <InstList>
<Instruction>   -> <Assign>
                -> <If>
                -> <While>
                -> <For>
                -> <Print>
                -> <Read>
<Assign>        -> [VarName] := <ExprArith>
<ExprArith>     -> <ExprArithMul> <OpAdd> <ExprArithMul>
<ExprArith>     -> <ExprArithMul>
<OpAdd>         -> +
                -> -
<ExprArithMul>  -> <ExprArithAtom> <OpMul> <ExprArithAtom>
<ExprArithMul>  -> <ExprArithAtom>
<OpMul>         -> *
                -> /
<ExprArithAtom> -> [VarName]
                -> [Number]
                -> ( <ExprArithAtom> )
                -> - <ExprArithAtom>
<If>            -> if <Cond> then <Code> endif
                -> if <Cond> then <Code> else <Code> endif
<Cond>          -> <CondAnd> or <CondAnd>
<Cond>          -> <CondAnd>
<CondAnd>       -> <CondAtom> and <CondAtom>
<CondAnd>       -> <CondAtom>
<CondAtom>      -> not <SimpleCond>
                -> <SimpleCond>
<SimpleCond>    -> <ExprArith> <Comp> <ExprArith>
<Comp>          -> = 
                -> >= 
                -> > 
                -> <= 
                -> < 
                -> <> 
<While>         -> while <Cond> do <Code> done
<For>           -> for [VarName] from <ExprArith> by <ExprArith> to <ExprArith> do <Code> done
                -> for [VarName] from <ExprArith> to <ExprArith> do <Code> done
<Print>         -> print ( [VarName] )
<Read>          -> read ( [VarName] )
